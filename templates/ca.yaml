{{- if .Values.ca.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "apache-nifi.fullname" . }}-ca
  labels:
    app: {{ template "apache-nifi.name" . }}-ca
    chart: {{ template "apache-nifi.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ .Values.ca.service.type }}
  ports:
    - port: {{ .Values.ca.port }}
      targetPort: {{ .Values.ca.port }}
      name: ca-server
  selector:
    app: {{ template "apache-nifi.name" . }}-ca
    release: {{ .Release.Name }}
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "apache-nifi.fullname" . }}-ca
  labels:
    app: {{ template "apache-nifi.name" . }}-ca
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "apache-nifi.name" . }}-ca
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "apache-nifi.name" . }}-ca
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: ca
        imagePullPolicy: {{ .Values.ca.image.pullPolicy | quote }}
        image: "{{ .Values.ca.image.repository }}:{{ .Values.ca.image.tag }}"
        command:
        - sh
        - -c
        - |
          exec ${NIFI_TOOLKIT_HOME}/bin/tls-toolkit.sh server -c "{{ template "apache-nifi.fullname" . }}-ca" -t "$(cat /etc/ca-mitm-token/token)" -p {{ .Values.ca.port }}
        ports:
        - containerPort: {{ .Values.ca.port }}
        volumeMounts:
          - name: ca-mitm-token
            mountPath: /etc/ca-mitm-token
      # needed until tls-toolkit.sh runs Java through exec
      terminationGracePeriodSeconds: 0
      volumes:
        - name: ca-mitm-token
          secret:
            secretName: ca-mitm-token
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "apache-nifi.fullname" . }}-certgen
  labels:
    app: {{ template "apache-nifi.name" . }}-certgen
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "apache-nifi.name" . }}-certgen
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "apache-nifi.name" . }}-certgen
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: certgen
        imagePullPolicy: {{ .Values.ca.image.pullPolicy | quote }}
        image: "{{ .Values.ca.image.repository }}:{{ .Values.ca.image.tag }}"
        command:
        - sh
        - -c
        - |
          while :; do
            if [ ! -f "keystore.pkcs12" ]; then
              ${NIFI_TOOLKIT_HOME}/bin/tls-toolkit.sh client\
                -c "{{ template "apache-nifi.fullname" . }}-ca"\
                -t "$(cat /etc/ca-mitm-token/token)"\
                -p {{ .Values.ca.port }}\
                -D "CN={{ .Values.ca.admin.cn }},OU=NIFI"\
                -T PKCS12
            fi
            sleep 60
          done
        volumeMounts:
          - name: ca-mitm-token
            mountPath: /etc/ca-mitm-token
      terminationGracePeriodSeconds: 0
      volumes:
        - name: ca-mitm-token
          secret:
            secretName: ca-mitm-token
{{- end -}}