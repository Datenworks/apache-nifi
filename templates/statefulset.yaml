apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "apache-nifi.fullname" . }}
  labels:
    app: {{ include "apache-nifi.name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  podManagementPolicy: {{ .Values.sts.podManagementPolicy }}
  serviceName: {{ template "apache-nifi.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        security.alpha.kubernetes.io/sysctls: net.ipv4.ip_local_port_range=10000 65000
      labels:
        app: {{ include "apache-nifi.name" . | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
    spec:
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
{{- if .Values.ca.enabled }}
      - name: {{ template "apache-nifi.name" . }}-cert
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
        - bash
        - -c
        - |
          CA_ADDRESS="{{ template "apache-nifi.fullname" . }}-ca:{{ .Values.ca.port }}"
          until echo "" | openssl s_client -connect "${CA_ADDRESS}"; do
            echo "Waiting for CA to be avaiable at ${CA_ADDRESS}"
            sleep 2
          done;

          mkdir -p ${NIFI_BASE_DIR}/data/cert
          cd ${NIFI_BASE_DIR}/data/cert

          rm -f ${NIFI_BASE_DIR}/data/cert/*

          ${NIFI_TOOLKIT_HOME}/bin/tls-toolkit.sh client\
            -c "{{ template "apache-nifi.fullname" . }}-ca"\
            -t "{{ .Values.ca.token }}"\
            -p {{ .Values.ca.port }}
        volumeMounts:
          - name: "data"
            mountPath: /opt/nifi/data
{{- end }}
      containers:
      - name: {{ template "apache-nifi.name" . }}-server
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
        - sh
        - -ce
        - |
          prop_replace () {
            target_file=${NIFI_HOME}/conf/nifi.properties
            echo 'replacing target file ' ${target_file}
            sed -i -e "s|^$1=.*$|$1=$2|"  ${target_file}
          }

          FQDN=$(hostname -f)

          cat "${NIFI_HOME}/conf/nifi.temp" > "${NIFI_HOME}/conf/nifi.properties"

          prop_replace nifi.web.http.host ${FQDN}
          prop_replace nifi.web.https.host ${FQDN}
          prop_replace nifi.remote.input.host ${FQDN}
          prop_replace nifi.cluster.node.address ${FQDN}
          prop_replace nifi.zookeeper.connect.string ${NIFI_ZOOKEEPER_CONNECT_STRING}

{{- if .Values.ca.enabled }}
          prop_replace nifi.security.keystore ${NIFI_BASE_DIR}/data/cert/keystore.jks
          prop_replace nifi.security.keystorePasswd $(jq -r .keyStorePassword ${NIFI_BASE_DIR}/data/cert/config.json)
          prop_replace nifi.security.keyPasswd $(jq -r .keyPassword ${NIFI_BASE_DIR}/data/cert/config.json)

          prop_replace nifi.security.truststore ${NIFI_BASE_DIR}/data/cert/truststore.jks
          prop_replace nifi.security.truststorePasswd $(jq -r .trustStorePassword ${NIFI_BASE_DIR}/data/cert/config.json)
{{- end }}

          bin/nifi.sh run
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: {{ .Values.properties.httpPort }}
          name: http
          protocol: TCP
        - containerPort: {{ .Values.properties.clusterPort }}
          name: cluster
          protocol: TCP
        env:
        - name: NIFI_ZOOKEEPER_CONNECT_STRING
          value: {{ template "zookeeper.url" . }}
        volumeMounts:
          - name: "data"
            mountPath: /opt/nifi/data
          - name: "flowfile-repository"
            mountPath: /opt/nifi/flowfile_repository
          - name: "content-repository"
            mountPath: /opt/nifi/content_repository
          - name: "provenance-repository"
            mountPath: /opt/nifi/provenance_repository
          - name: "logs"
            mountPath: /opt/nifi/logs
          - name: "bootstrap-conf"
            mountPath: /opt/nifi/nifi-{{ .Values.image.tag }}/conf/bootstrap.conf
            subPath: "bootstrap.conf"
          - name: "nifi-properties"
            mountPath: /opt/nifi/nifi-{{ .Values.image.tag }}/conf/nifi.temp
            subPath: "nifi.temp"
          - name: "authorizers-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.image.tag }}/conf/authorizers.xml
            subPath: "authorizers.xml"
          - name: "bootstrap-notification-services-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.image.tag }}/conf/bootstrap-notification-services.xml
            subPath: "bootstrap-notification-services.xml"
          - name: "logback-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.image.tag }}/conf/logback.xml
            subPath: "logback.xml"
          - name: "login-identity-providers-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.image.tag }}/conf/login-identity-providers.xml
            subPath: "login-identity-providers.xml"
          - name: "state-management-xml"
            mountPath: /opt/nifi/nifi-{{ .Values.image.tag }}/conf/state-management.xml
            subPath: "state-management.xml"
          - name: "zookeeper-properties"
            mountPath: /opt/nifi/nifi-{{ .Values.image.tag }}/conf/zookeeper.properties
            subPath: "zookeeper.properties"
      - name: nifi-app-log-sidecar
        image: {{ .Values.sidecar.image }}
        args: [/bin/sh, -c, 'tail -n+1 -F /var/log/nifi-app.log']
        resources:
{{ toYaml .Values.logresources | indent 10 }}
        volumeMounts:
        - name: logs
          mountPath: /var/log
      - name: nifi-bootstrap-log-sidecar
        image: {{ .Values.sidecar.image }}
        args: [/bin/sh, -c, 'tail -n+1 -F /var/log/nifi-bootstrap.log']
        resources:
{{ toYaml .Values.logresources | indent 10 }}
        volumeMounts:
        - name: logs
          mountPath: /var/log
      - name: nifi-user-log-sidecar
        image: {{ .Values.sidecar.image }}
        args: [/bin/sh, -c, 'tail -n+1 -F /var/log/nifi-user.log']
        resources:
{{ toYaml .Values.logresources | indent 10 }}
        volumeMounts:
        - name: logs
          mountPath: /var/log
      volumes:
      - name: "bootstrap-conf"
        configMap:
          name: {{ template "apache-nifi.fullname" . }}-config
          items:
            - key: "bootstrap.conf"
              path: "bootstrap.conf"
      - name: "nifi-properties"
        configMap:
          name: {{ template "apache-nifi.fullname" . }}-config
          items:
            - key: "nifi.properties"
              path: "nifi.temp"
      - name: "authorizers-xml"
        configMap:
          name: {{ template "apache-nifi.fullname" . }}-config
          items:
            - key: "authorizers.xml"
              path: "authorizers.xml"
      - name: "bootstrap-notification-services-xml"
        configMap:
          name: {{ template "apache-nifi.fullname" . }}-config
          items:
            - key: "bootstrap-notification-services.xml"
              path: "bootstrap-notification-services.xml"
      - name: "logback-xml"
        configMap:
          name: {{ template "apache-nifi.fullname" . }}-config
          items:
            - key: "logback.xml"
              path: "logback.xml"
      - name: "login-identity-providers-xml"
        configMap:
          name: {{ template "apache-nifi.fullname" . }}-config
          items:
            - key: "login-identity-providers.xml"
              path: "login-identity-providers.xml"
      - name: "state-management-xml"
        configMap:
          name: {{ template "apache-nifi.fullname" . }}-config
          items:
            - key: "state-management.xml"
              path: "state-management.xml"
      - name: "zookeeper-properties"
        configMap:
          name: {{ template "apache-nifi.fullname" . }}-config
          items:
            - key: "zookeeper.properties"
              path: "zookeeper.properties"
  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.dataStorage }}
    - metadata:
        name: "flowfile-repository"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.flowfileRepoStorage }}
    - metadata:
        name: "content-repository"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.contentRepoStorage }}
    - metadata:
        name: "provenance-repository"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.provenanceRepoStorage }}
    - metadata:
        name: "logs"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.logStorage }}